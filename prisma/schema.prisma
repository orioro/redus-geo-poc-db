// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MapLayer {
  id                    Int          @id @default(autoincrement())
  name                  String?      @db.VarChar(255)
  description           String?
  featurePropertySchema Json?
  parentMapLayer        MapLayer?    @relation("ChildMapLayers", fields: [parentMapLayerId], references: [id])
  parentMapLayerId      Int?
  childMapLayers        MapLayer[]   @relation("ChildMapLayers")
  features              MapFeature[]
}

model MapFeature {
  id         Int       @id @default(autoincrement())
  mapLayer   MapLayer? @relation(fields: [mapLayerId], references: [id])
  mapLayerId Int?
  geometry   Unsupported("geometry")?
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }
